<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.graphql</groupId>
	<artifactId>graphql-book</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>
	<name>GraphQL Book</name>
	<description>GraphQL Book API</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.0.BUILD-SNAPSHOT</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<properties>
		<docker.image.prefix>khteh/tomcat</docker.image.prefix>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<start-class>com.graphql.book.BookApplication</start-class>
	</properties>
	<dependencies>
<!-- JPA Data (We are going to use Repositories, Entities, Hibernate, etc...) -->	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.graphql-java/graphql-spring-boot-starter -->
		<dependency>
		    <groupId>com.graphql-java</groupId>
		    <artifactId>graphql-spring-boot-starter</artifactId>
		    <version>5.0.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.graphql-java/graphql-java-tools -->
		<dependency>
		    <groupId>com.graphql-java</groupId>
		    <artifactId>graphql-java-tools</artifactId>
		    <version>5.2.4</version>
		</dependency>
 		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- marked the embedded servlet container as provided -->
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-tomcat</artifactId>
        	<scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.4.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jcache</artifactId>
            <version>5.4.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>tools</artifactId>
                    <groupId>com.sun</groupId>
                </exclusion>
            </exclusions>
        </dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<defaultGoal>spring-boot:run</defaultGoal>
        <testResources>
            <testResource>
                <directory>src/test/resources/</directory>
            </testResource>
        </testResources>
		<resources>
	        <resource>
	            <directory>src/main/resources</directory>
	            <filtering>true</filtering>
	        </resource>
	    </resources>        
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
			        <mainClass>${start-class}</mainClass>
			        <layout>WAR</layout>
		      	</configuration>				
			 	<executions>
			        <execution>
			          <goals>
			            <goal>repackage</goal>
			          </goals>
					</execution>
			    </executions>				
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.xml</include>
                                        <include>**/*.yml</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>**/*.xml</exclude>
                                        <exclude>**/*.yml</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <version>3.0.0-M2</version>
				<configuration>
		            <includes>
		                <include>**/*Test*.java</include>
		            </includes>
		        </configuration>			    
			</plugin>			
		</plugins>
		<extensions>
		    <extension>
		      <groupId>com.spotify</groupId>
		      <artifactId>dockerfile-maven-extension</artifactId>
		      <version>1.4.10</version>
		    </extension>
	  	</extensions>		
	</build>
	<profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <profiles>
                                <profile>dev</profile>
                            </profiles>
                        </configuration>
                    </plugin>				
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
		            <plugin>
		            	<groupId>com.spotify</groupId>
		                <artifactId>dockerfile-maven-plugin</artifactId>
		                <version>1.4.10</version>
		                <configuration>
							<imageName>${docker.image.prefix}</imageName>
		 					<!--<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>-->
							<!--<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>target/${project.build.finalName}.jar</include>
								</resource>
							</resources>-->					                
		                	<repository>${docker.image.prefix}</repository>
		                   	<tag>${project.artifactId}-${project.version}</tag>
		                    <buildArgs>
		                      	<JAR_FILE>target/${project.build.finalName}.war</JAR_FILE>
		                    </buildArgs>
		            	</configuration>
		                <executions>
							<execution>
							      <id>build-image</id>
							      <phase>package</phase>
							      <goals>
							        <goal>build</goal>
							      </goals>
						    </execution>
		                    <execution>
							      <id>tag-image</id>
							      <phase>package</phase>
							      <goals>
							        <goal>tag</goal>
							      </goals>
							      <configuration>
							        <image>${docker.image.prefix}</image>
							        <newName>${docker.image.prefix}:${project.artifactId}-${project.version}</newName>
							      </configuration>
							</execution>
		                	<execution>
		                    	<id>install</id>
		                    	<phase>install</phase>
		                        <goals>
		                            <goal>push</goal>
		                        </goals>
		                    </execution>
		                </executions>            	
					</plugin>
					<plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <profiles>
                                <profile>prod</profile>
                            </profiles>
                        </configuration>
                    </plugin>				
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
		<repository>
        	<id>spring-releases</id>
	        <url>https://repo.spring.io/libs-release</url>
    	</repository>	
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	    <repository>
	      <id>jcenter</id>
	      <url>https://jcenter.bintray.com/</url>
	    </repository>
		 <repository>
		    <id>oss-snapshot-local</id>
		    <name>jfrog</name>
		    <url>http://oss.jfrog.org/artifactory/oss-snapshot-local</url>
		    <snapshots>
		      <enabled>true</enabled>
		      <updatePolicy>always</updatePolicy>
		    </snapshots>
		  </repository>        
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
    </pluginRepositories>	
</project>